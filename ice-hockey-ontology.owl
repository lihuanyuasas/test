Prefix(:=<http://www.ida.liu.se/ontologies/ice-hockey-ontology#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)


Ontology(<http://www.ida.liu.se/ontologies/ice-hockey-ontology>

Declaration(Class(:Action-event))
Declaration(Class(:Arena))
Declaration(Class(:Assistant-coach))
Declaration(Class(:Assistant-general-manager))
Declaration(Class(:Bench-zone))
Declaration(Class(:Bench-zone-N))
Declaration(Class(:Bench-zone-S))
Declaration(Class(:Blocked-shot-event))
Declaration(Class(:Blocked-zone))
Declaration(Class(:Board))
Declaration(Class(:Center))
Declaration(Class(:Center-ice-faceoff-spot))
Declaration(Class(:Chairperson))
Declaration(Class(:Coach))
Declaration(Class(:Conditioning-coach))
Declaration(Class(:Defender))
Declaration(Class(:Early-intermission-end))
Declaration(Class(:Early-intermission-start))
Declaration(Class(:End-event))
Declaration(Class(:End-zone))
Declaration(Class(:End-zone-faceoff-spot))
Declaration(Class(:Equipment-manager))
Declaration(Class(:Even))
Declaration(Class(:Event))
Declaration(Class(:Faceoff))
Declaration(Class(:Faceoff-spot))
Declaration(Class(:Faceoff-spot-CNE))
Declaration(Class(:Faceoff-spot-CNW))
Declaration(Class(:Faceoff-spot-CSE))
Declaration(Class(:Faceoff-spot-CSW))
Declaration(Class(:Faceoff-spot-NE))
Declaration(Class(:Faceoff-spot-NW))
Declaration(Class(:Faceoff-spot-SE))
Declaration(Class(:Faceoff-spot-SW))
Declaration(Class(:Faceoff-zone))
Declaration(Class(:Faceoff-zone-C))
Declaration(Class(:Faceoff-zone-NE))
Declaration(Class(:Faceoff-zone-NW))
Declaration(Class(:Faceoff-zone-SE))
Declaration(Class(:Faceoff-zone-SW))
Declaration(Class(:Forward))
Declaration(Class(:Game))
Declaration(Class(:Game-end))
Declaration(Class(:Game-event))
Declaration(Class(:Game-off))
Declaration(Class(:Game-state))
Declaration(Class(:General-manager))
Declaration(Class(:Giveaway))
Declaration(Class(:Goal-frame))
Declaration(Class(:Goal-net))
Declaration(Class(:Goal-zone))
Declaration(Class(:Goalkeeper))
Declaration(Class(:Goaltending-coach))
Declaration(Class(:Head-coach))
Declaration(Class(:Hit))
Declaration(Class(:Icing-zone))
Declaration(Class(:League))
Declaration(Class(:Left-Wing))
Declaration(Class(:Missed-shot-event))
Declaration(Class(:Moorings))
Declaration(Class(:Neutral-zone))
Declaration(Class(:Neutral-zone-faceoff-spot))
Declaration(Class(:North-end-zone))
Declaration(Class(:North-goal-zone))
Declaration(Class(:North-icing-zone))
Declaration(Class(:Off-ice-zone))
Declaration(Class(:On-ice-object))
Declaration(Class(:On-ice-zone))
Declaration(Class(:Overtime-period))
Declaration(Class(:Penalty))
Declaration(Class(:Penalty-box-zone))
Declaration(Class(:Penalty-box-zone-N))
Declaration(Class(:Penalty-box-zone-S))
Declaration(Class(:Penalty-event))
Declaration(Class(:Penalty-shot-shootout-period))
Declaration(Class(:Penalty-type))
Declaration(Class(:Period))
Declaration(Class(:Period-end))
Declaration(Class(:Period-start))
Declaration(Class(:Person))
Declaration(Class(:Player))
Declaration(Class(:Player-on-roster))
Declaration(Class(:Playoff-game))
Declaration(Class(:Power-play))
Declaration(Class(:Preseason-game))
Declaration(Class(:President))
Declaration(Class(:Protective-netting))
Declaration(Class(:Puck))
Declaration(Class(:Referee))
Declaration(Class(:Regular-season-game))
Declaration(Class(:Regulation-period))
Declaration(Class(:Right-Wing))
Declaration(Class(:Rink))
Declaration(Class(:Scoring-shot-event))
Declaration(Class(:Scout))
Declaration(Class(:Season-for-league))
Declaration(Class(:Shift))
Declaration(Class(:Short-handed))
Declaration(Class(:Shot-event))
Declaration(Class(:Shot-on-goal-event))
Declaration(Class(:South-end-zone))
Declaration(Class(:South-goal-zone))
Declaration(Class(:South-icing-zone))
Declaration(Class(:Start-event))
Declaration(Class(:Stoppage))
Declaration(Class(:Takeaway))
Declaration(Class(:Team))
Declaration(Class(:Team-disposition))
Declaration(Class(:Team-physician))
Declaration(Class(:Team-roster))
Declaration(Class(:Team-roster-for-game))
Declaration(Class(:Team-roster-for-season))
Declaration(Class(:Video-coach))
Declaration(Class(:Zone))
Declaration(Class(:Zone-CNE))
Declaration(Class(:Zone-CNW))
Declaration(Class(:Zone-CSE))
Declaration(Class(:Zone-CSW))
Declaration(Class(:Zone-NE))
Declaration(Class(:Zone-NW))
Declaration(Class(:Zone-SE))
Declaration(Class(:Zone-SW))
Declaration(ObjectProperty(:adjacent-to))
Declaration(ObjectProperty(:attacking-team))
Declaration(ObjectProperty(:away-player))
Declaration(ObjectProperty(:belong-to))
Declaration(ObjectProperty(:by-team))
Declaration(ObjectProperty(:contains-team))
Declaration(ObjectProperty(:defending-team))
Declaration(ObjectProperty(:defendingNTeam-has-bench))
Declaration(ObjectProperty(:defendingSTeam-has-bench))
Declaration(ObjectProperty(:directly-followed-by))
Declaration(ObjectProperty(:directly-preceded-by))
Declaration(ObjectProperty(:faceoff-at))
Declaration(ObjectProperty(:followed-by))
Declaration(ObjectProperty(:has-away-player-on-ice))
Declaration(ObjectProperty(:has-away-team))
Declaration(ObjectProperty(:has-away-team-roster))
Declaration(ObjectProperty(:has-defendingN-team))
Declaration(ObjectProperty(:has-defendingS-team))
Declaration(ObjectProperty(:has-faceoff-zone))
Declaration(ObjectProperty(:has-game-event))
Declaration(ObjectProperty(:has-game-state))
Declaration(ObjectProperty(:has-home-arena))
Declaration(ObjectProperty(:has-home-player-on-ice))
Declaration(ObjectProperty(:has-home-team))
Declaration(ObjectProperty(:has-home-team-roster))
Declaration(ObjectProperty(:has-participating-team))
Declaration(ObjectProperty(:has-penalized-player))
Declaration(ObjectProperty(:has-penalized-team))
Declaration(ObjectProperty(:has-penalty-severity))
Declaration(ObjectProperty(:has-penalty-type))
Declaration(ObjectProperty(:has-player))
Declaration(ObjectProperty(:has-player-in-penalty-box))
Declaration(ObjectProperty(:has-player-on-ice))
Declaration(ObjectProperty(:has-player-on-roster))
Declaration(ObjectProperty(:has-season))
Declaration(ObjectProperty(:has-season-game))
Declaration(ObjectProperty(:has-team-disposition))
Declaration(ObjectProperty(:has-team-roster))
Declaration(ObjectProperty(:has-zone))
Declaration(ObjectProperty(:home-player))
Declaration(ObjectProperty(:is-game-for-season))
Declaration(ObjectProperty(:is-season-for))
Declaration(ObjectProperty(:located-in))
Declaration(ObjectProperty(:occured-in-period))
Declaration(ObjectProperty(:part-of))
Declaration(ObjectProperty(:partly-adjacent-to))
Declaration(ObjectProperty(:plays-in-league))
Declaration(ObjectProperty(:plays-in-season-for-league))
Declaration(ObjectProperty(:preceded-by))
Declaration(ObjectProperty(:shooting-player))
Declaration(ObjectProperty(:shot-taken-by))
Declaration(ObjectProperty(:substituted-player))
Declaration(ObjectProperty(:substituting-player))
Declaration(ObjectProperty(:winning-team))
Declaration(DataProperty(:away-team-goals))
Declaration(DataProperty(:goal-differential))
Declaration(DataProperty(:has-date))
Declaration(DataProperty(:has-end-time))
Declaration(DataProperty(:has-end-year))
Declaration(DataProperty(:has-league-name))
Declaration(DataProperty(:has-length))
Declaration(DataProperty(:has-name))
Declaration(DataProperty(:has-order))
Declaration(DataProperty(:has-period-time))
Declaration(DataProperty(:has-person-name))
Declaration(DataProperty(:has-radius))
Declaration(DataProperty(:has-shirt-number))
Declaration(DataProperty(:has-start-time))
Declaration(DataProperty(:has-start-year))
Declaration(DataProperty(:has-team-name))
Declaration(DataProperty(:has-time))
Declaration(DataProperty(:has-width))
Declaration(DataProperty(:has-x-coordinate))
Declaration(DataProperty(:has-y-coordinate))
Declaration(DataProperty(:home-team-goals))
Declaration(DataProperty(:penalized-duration))
Declaration(NamedIndividual(:Bench-Minor-Penalty))
Declaration(NamedIndividual(:Even-3-3))
Declaration(NamedIndividual(:Even-4-4))
Declaration(NamedIndividual(:Even-5-5))
Declaration(NamedIndividual(:Fighting))
Declaration(NamedIndividual(:Game-Misconduct-Penalty))
Declaration(NamedIndividual(:High-Sticking))
Declaration(NamedIndividual(:Holding))
Declaration(NamedIndividual(:Interference))
Declaration(NamedIndividual(:Major-Penalty))
Declaration(NamedIndividual(:Match-Penalty))
Declaration(NamedIndividual(:Minor-Penalty))
Declaration(NamedIndividual(:Misconduct-Penalty))
Declaration(NamedIndividual(:PP-5-3))
Declaration(NamedIndividual(:PP-5-4))
Declaration(NamedIndividual(:SH-3-5))
Declaration(NamedIndividual(:SH-4-5))
Declaration(NamedIndividual(:Slashing))
Declaration(NamedIndividual(:Too-Many-Players-On-Ice))
Declaration(NamedIndividual(:Tripping))
Declaration(Datatype(xsd:date))
Declaration(Datatype(xsd:duration))

############################
#   Object Properties
############################

# Object Property: :adjacent-to (:adjacent-to)

SymmetricObjectProperty(:adjacent-to)
ObjectPropertyDomain(:adjacent-to ObjectUnionOf(:Blocked-zone :End-zone :Faceoff-zone :Goal-zone :Icing-zone :Neutral-zone))
ObjectPropertyRange(:adjacent-to ObjectUnionOf(:Blocked-zone :End-zone :Faceoff-zone :Goal-zone :Icing-zone :Neutral-zone))

# Object Property: :contains-team (:contains-team)

InverseObjectProperties(:contains-team :plays-in-league)
ObjectPropertyDomain(:contains-team :Season-for-league)
ObjectPropertyRange(:contains-team :Team)

# Object Property: :directly-followed-by (:directly-followed-by)

SubObjectPropertyOf(:directly-followed-by :followed-by)
InverseObjectProperties(:directly-followed-by :directly-preceded-by)

# Object Property: :directly-preceded-by (:directly-preceded-by)

SubObjectPropertyOf(:directly-preceded-by :preceded-by)

# Object Property: :faceoff-at (:faceoff-at)

ObjectPropertyDomain(:faceoff-at :Faceoff)
ObjectPropertyRange(:faceoff-at :Faceoff-spot)

# Object Property: :followed-by (:followed-by)

InverseObjectProperties(:followed-by :preceded-by)
ObjectPropertyDomain(:followed-by :Game-event)
ObjectPropertyRange(:followed-by :Game-event)

# Object Property: :has-away-player-on-ice (:has-away-player-on-ice)

SubObjectPropertyOf(:has-away-player-on-ice :has-player-on-ice)

# Object Property: :has-away-team (:has-away-team)

SubObjectPropertyOf(:has-away-team :has-participating-team)

# Object Property: :has-away-team-roster (:has-away-team-roster)

SubObjectPropertyOf(:has-away-team-roster :has-team-roster)

# Object Property: :has-faceoff-zone (:has-faceoff-zone)

SubObjectPropertyOf(:has-faceoff-zone :has-zone)

# Object Property: :has-game-event (:has-game-event)

ObjectPropertyDomain(:has-game-event :Game)
ObjectPropertyRange(:has-game-event :Game-event)

# Object Property: :has-game-state (:has-game-state)

SubObjectPropertyOf(:has-game-state owl:topObjectProperty)
ObjectPropertyDomain(:has-game-state :Game-event)
ObjectPropertyRange(:has-game-state :Game-state)

# Object Property: :has-home-arena (:has-home-arena)

ObjectPropertyDomain(:has-home-arena :Team)
ObjectPropertyRange(:has-home-arena :Arena)

# Object Property: :has-home-player-on-ice (:has-home-player-on-ice)

SubObjectPropertyOf(:has-home-player-on-ice :has-player-on-ice)

# Object Property: :has-home-team (:has-home-team)

SubObjectPropertyOf(:has-home-team :has-participating-team)

# Object Property: :has-home-team-roster (:has-home-team-roster)

SubObjectPropertyOf(:has-home-team-roster :has-team-roster)

# Object Property: :has-participating-team (:has-participating-team)

ObjectPropertyDomain(:has-participating-team :Game)
ObjectPropertyRange(:has-participating-team :Team)

# Object Property: :has-penalized-player (:has-penalized-player)

ObjectPropertyDomain(:has-penalized-player :Penalty-event)
ObjectPropertyRange(:has-penalized-player :Player)

# Object Property: :has-penalized-team (:has-penalized-team)

ObjectPropertyDomain(:has-penalized-team :Penalty-event)
ObjectPropertyRange(:has-penalized-team :Team)

# Object Property: :has-penalty-severity (:has-penalty-severity)

ObjectPropertyDomain(:has-penalty-severity :Penalty-event)
ObjectPropertyRange(:has-penalty-severity :Penalty)

# Object Property: :has-penalty-type (:has-penalty-type)

ObjectPropertyDomain(:has-penalty-type :Penalty-event)
ObjectPropertyRange(:has-penalty-type :Penalty-type)

# Object Property: :has-player (:has-player)

ObjectPropertyDomain(:has-player ObjectUnionOf(:Player-on-roster :Team))
ObjectPropertyRange(:has-player :Player)

# Object Property: :has-player-in-penalty-box (:has-player-in-penalty-box)

ObjectPropertyDomain(:has-player-in-penalty-box :Penalty-event)
ObjectPropertyRange(:has-player-in-penalty-box :Player)

# Object Property: :has-player-on-ice (:has-player-on-ice)

SubObjectPropertyOf(:has-player-on-ice owl:topObjectProperty)

# Object Property: :has-player-on-roster (:has-player-on-roster)

ObjectPropertyDomain(:has-player-on-roster :Team-roster)
ObjectPropertyRange(:has-player-on-roster :Player-on-roster)

# Object Property: :has-season (:has-season)

InverseObjectProperties(:has-season :is-season-for)
ObjectPropertyDomain(:has-season :League)
ObjectPropertyRange(:has-season :Season-for-league)

# Object Property: :has-season-game (:has-season-game)

InverseObjectProperties(:has-season-game :is-game-for-season)
ObjectPropertyDomain(:has-season-game :Season-for-league)
ObjectPropertyRange(:has-season-game :Game)

# Object Property: :has-team-disposition (:has-team-disposition)

ObjectPropertyDomain(:has-team-disposition :Game-state)
ObjectPropertyRange(:has-team-disposition :Team-disposition)

# Object Property: :has-team-roster (:has-team-roster)

ObjectPropertyDomain(:has-team-roster :Game)
ObjectPropertyRange(:has-team-roster :Team-roster-for-game)

# Object Property: :is-game-for-season (:is-game-for-season)

ObjectPropertyDomain(:is-game-for-season :Game)
ObjectPropertyRange(:is-game-for-season :Season-for-league)

# Object Property: :is-season-for (:is-season-for)

ObjectPropertyDomain(:is-season-for :Season-for-league)
ObjectPropertyRange(:is-season-for :League)

# Object Property: :located-in (:located-in)

TransitiveObjectProperty(:located-in)

# Object Property: :occured-in-period (occursInPeriod)

AnnotationAssertion(rdfs:label :occured-in-period "occursInPeriod")
SubObjectPropertyOf(:occured-in-period owl:topObjectProperty)
ObjectPropertyDomain(:occured-in-period :Game-event)
ObjectPropertyRange(:occured-in-period :Period)

# Object Property: :partly-adjacent-to (:partly-adjacent-to)

SubObjectPropertyOf(:partly-adjacent-to :adjacent-to)
SymmetricObjectProperty(:partly-adjacent-to)

# Object Property: :plays-in-season-for-league (:plays-in-season-for-league)

ObjectPropertyDomain(:plays-in-season-for-league :Team)
ObjectPropertyRange(:plays-in-season-for-league :Season-for-league)

# Object Property: :preceded-by (:preceded-by)

ObjectPropertyDomain(:preceded-by :Game-event)
ObjectPropertyRange(:preceded-by :Game-event)

# Object Property: :shot-taken-by (shot-taken-by)

AnnotationAssertion(rdfs:label :shot-taken-by "shot-taken-by")
SubObjectPropertyOf(:shot-taken-by owl:topObjectProperty)
ObjectPropertyDomain(:shot-taken-by :Shot-event)

# Object Property: :winning-team (:winning-team)

ObjectPropertyDomain(:winning-team :Game)
ObjectPropertyRange(:winning-team :Team)


############################
#   Data Properties
############################

# Data Property: :away-team-goals (:away-team-goals)

DataPropertyDomain(:away-team-goals :Game-event)
DataPropertyRange(:away-team-goals xsd:int)

# Data Property: :goal-differential (:goal-differential)

DataPropertyDomain(:goal-differential :Game-event)
DataPropertyRange(:goal-differential xsd:int)

# Data Property: :has-date (:has-date)

SubDataPropertyOf(:has-date owl:topDataProperty)
DataPropertyRange(:has-date xsd:date)

# Data Property: :has-end-time (:has-end-time)

SubDataPropertyOf(:has-end-time owl:topDataProperty)
DataPropertyRange(:has-end-time xsd:dateTime)

# Data Property: :has-league-name (:has-league-name)

SubDataPropertyOf(:has-league-name :has-name)
DataPropertyDomain(:has-league-name :League)

# Data Property: :has-length (:has-length)

DataPropertyDomain(:has-length :Rink)

# Data Property: :has-name (:has-name)

SubDataPropertyOf(:has-name owl:topDataProperty)

# Data Property: :has-order (:has-order)

DataPropertyDomain(:has-order :Period)
DataPropertyRange(:has-order DatatypeRestriction(xsd:int xsd:minInclusive "1"^^xsd:int xsd:maxInclusive "5"^^xsd:int))

# Data Property: :has-period-time (:has-period-time)

DataPropertyRange(:has-period-time xsd:duration)

# Data Property: :has-person-name (:has-person-name)

SubDataPropertyOf(:has-person-name :has-name)
DataPropertyDomain(:has-person-name :Person)

# Data Property: :has-start-time (:has-start-time)

SubDataPropertyOf(:has-start-time owl:topDataProperty)
DataPropertyRange(:has-start-time xsd:dateTime)

# Data Property: :has-team-name (:has-team-name)

SubDataPropertyOf(:has-team-name :has-name)
DataPropertyDomain(:has-team-name :Team)

# Data Property: :has-time (:has-time)

SubDataPropertyOf(:has-time owl:topDataProperty)
DataPropertyRange(:has-time xsd:dateTime)

# Data Property: :has-width (:has-width)

DataPropertyDomain(:has-width :Rink)

# Data Property: :home-team-goals (:home-team-goals)

DataPropertyDomain(:home-team-goals :Game-event)
DataPropertyRange(:home-team-goals xsd:int)

# Data Property: :penalized-duration (:penalized-duration)

DataPropertyDomain(:penalized-duration :Penalty-event)
DataPropertyRange(:penalized-duration xsd:integer)



############################
#   Classes
############################

# Class: :Action-event (:Action-event)

SubClassOf(:Action-event :Game-event)
SubClassOf(:Action-event ObjectIntersectionOf(ObjectAllValuesFrom(:directly-followed-by ObjectUnionOf(:Action-event :End-event :Penalty-event :Stoppage)) ObjectExactCardinality(1 :directly-followed-by)))

# Class: :Assistant-coach (:Assistant-coach)

SubClassOf(:Assistant-coach :Coach)

# Class: :Assistant-general-manager (:Assistant-general-manager)

SubClassOf(:Assistant-general-manager :Person)

# Class: :Bench-zone (:Bench-zone)

SubClassOf(:Bench-zone :Off-ice-zone)

# Class: :Bench-zone-N (:Bench-zone-N)

SubClassOf(:Bench-zone-N :Bench-zone)

# Class: :Bench-zone-S (:Bench-zone-S)

SubClassOf(:Bench-zone-S :Bench-zone)

# Class: :Blocked-shot-event (Blocked-shot-event)

AnnotationAssertion(rdfs:label :Blocked-shot-event "Blocked-shot-event")
SubClassOf(:Blocked-shot-event :Shot-event)

# Class: :Blocked-zone (:Blocked-zone)

SubClassOf(:Blocked-zone :On-ice-zone)

# Class: :Board (:Board)

SubClassOf(:Board :On-ice-object)

# Class: :Center (:Center)

SubClassOf(:Center :Forward)

# Class: :Center-ice-faceoff-spot (:Center-ice-faceoff-spot)

SubClassOf(:Center-ice-faceoff-spot :Faceoff-spot)
SubClassOf(:Center-ice-faceoff-spot ObjectSomeValuesFrom(:located-in :Neutral-zone))

# Class: :Chairperson (:Chairperson)

SubClassOf(:Chairperson :Person)

# Class: :Coach (:Coach)

SubClassOf(:Coach :Person)

# Class: :Conditioning-coach (:Conditioning-coach)

SubClassOf(:Conditioning-coach :Coach)

# Class: :Defender (:Defender)

SubClassOf(:Defender :Player)

# Class: :Early-intermission-end (Early-intermission-end)

AnnotationAssertion(rdfs:label :Early-intermission-end "Early-intermission-end")
SubClassOf(:Early-intermission-end :End-event)

# Class: :Early-intermission-start (Early-intermission-start)

AnnotationAssertion(rdfs:label :Early-intermission-start "Early-intermission-start")
SubClassOf(:Early-intermission-start :Start-event)

# Class: :End-event (End-event)

AnnotationAssertion(rdfs:label :End-event "End-event")
SubClassOf(:End-event :Game-event)

# Class: :End-zone (:End-zone)

SubClassOf(:End-zone :On-ice-zone)

# Class: :End-zone-faceoff-spot (:End-zone-faceoff-spot)

SubClassOf(:End-zone-faceoff-spot :Faceoff-spot)
SubClassOf(:End-zone-faceoff-spot ObjectSomeValuesFrom(:located-in :End-zone))

# Class: :Equipment-manager (:Equipment-manager)

SubClassOf(:Equipment-manager :Person)

# Class: :Even (:Even)

SubClassOf(:Even :Team-disposition)

# Class: :Event (Event)

AnnotationAssertion(rdfs:label :Event "Event")

# Class: :Faceoff (Faceoff)

AnnotationAssertion(rdfs:label :Faceoff "Faceoff")
SubClassOf(:Faceoff :Game-event)
SubClassOf(:Faceoff ObjectSomeValuesFrom(:directly-followed-by :Action-event))
SubClassOf(:Faceoff ObjectAllValuesFrom(:away-player :Player-on-roster))
SubClassOf(:Faceoff ObjectAllValuesFrom(:faceoff-at :Faceoff-spot))
SubClassOf(:Faceoff ObjectAllValuesFrom(:home-player :Player-on-roster))
SubClassOf(:Faceoff ObjectExactCardinality(1 :faceoff-at :Faceoff-spot))
SubClassOf(:Faceoff ObjectExactCardinality(1 :winning-team :Team))

# Class: :Faceoff-spot (:Faceoff-spot)

SubClassOf(:Faceoff-spot :On-ice-zone)

# Class: :Faceoff-spot-CNE (:Faceoff-spot-CNE)

SubClassOf(:Faceoff-spot-CNE :Neutral-zone-faceoff-spot)
SubClassOf(:Faceoff-spot-CNE ObjectSomeValuesFrom(:located-in :Zone-CNE))

# Class: :Faceoff-spot-CNW (:Faceoff-spot-CNW)

SubClassOf(:Faceoff-spot-CNW :Neutral-zone-faceoff-spot)
SubClassOf(:Faceoff-spot-CNW ObjectSomeValuesFrom(:located-in :Zone-CNW))

# Class: :Faceoff-spot-CSE (:Faceoff-spot-CSE)

SubClassOf(:Faceoff-spot-CSE :Neutral-zone-faceoff-spot)
SubClassOf(:Faceoff-spot-CSE ObjectSomeValuesFrom(:located-in :Zone-CSE))

# Class: :Faceoff-spot-CSW (:Faceoff-spot-CSW)

SubClassOf(:Faceoff-spot-CSW :Neutral-zone-faceoff-spot)
SubClassOf(:Faceoff-spot-CSW ObjectSomeValuesFrom(:located-in :Zone-CSW))

# Class: :Faceoff-spot-NE (:Faceoff-spot-NE)

SubClassOf(:Faceoff-spot-NE :End-zone-faceoff-spot)
SubClassOf(:Faceoff-spot-NE ObjectIntersectionOf(ObjectSomeValuesFrom(:located-in :North-end-zone) ObjectSomeValuesFrom(:located-in :Zone-NE)))

# Class: :Faceoff-spot-NW (:Faceoff-spot-NW)

SubClassOf(:Faceoff-spot-NW :End-zone-faceoff-spot)
SubClassOf(:Faceoff-spot-NW ObjectIntersectionOf(ObjectSomeValuesFrom(:located-in :North-end-zone) ObjectSomeValuesFrom(:located-in :Zone-NW)))

# Class: :Faceoff-spot-SE (:Faceoff-spot-SE)

SubClassOf(:Faceoff-spot-SE :End-zone-faceoff-spot)
SubClassOf(:Faceoff-spot-SE ObjectIntersectionOf(ObjectSomeValuesFrom(:located-in :South-end-zone) ObjectSomeValuesFrom(:located-in :Zone-SE)))

# Class: :Faceoff-spot-SW (:Faceoff-spot-SW)

SubClassOf(:Faceoff-spot-SW :End-zone-faceoff-spot)
SubClassOf(:Faceoff-spot-SW ObjectIntersectionOf(ObjectSomeValuesFrom(:located-in :South-end-zone) ObjectSomeValuesFrom(:located-in :Zone-SW)))

# Class: :Faceoff-zone (:Faceoff-zone)

AnnotationAssertion(rdfs:comment :Faceoff-zone "There are nine faceoff zones totally.")
SubClassOf(:Faceoff-zone :On-ice-zone)

# Class: :Faceoff-zone-C (:Faceoff-zone-C)

SubClassOf(:Faceoff-zone-C :Faceoff-zone)
SubClassOf(:Faceoff-zone-C ObjectSomeValuesFrom(:located-in :Neutral-zone))

# Class: :Faceoff-zone-NE (:Faceoff-zone-NE)

SubClassOf(:Faceoff-zone-NE :Faceoff-zone)
SubClassOf(:Faceoff-zone-NE ObjectIntersectionOf(ObjectSomeValuesFrom(:located-in :North-end-zone) ObjectSomeValuesFrom(:located-in :Zone-NE)))

# Class: :Faceoff-zone-NW (:Faceoff-zone-NW)

SubClassOf(:Faceoff-zone-NW :Faceoff-zone)
SubClassOf(:Faceoff-zone-NW ObjectIntersectionOf(ObjectSomeValuesFrom(:located-in :North-end-zone) ObjectSomeValuesFrom(:located-in :Zone-NW)))

# Class: :Faceoff-zone-SE (:Faceoff-zone-SE)

SubClassOf(:Faceoff-zone-SE :Faceoff-zone)
SubClassOf(:Faceoff-zone-SE ObjectIntersectionOf(ObjectSomeValuesFrom(:located-in :South-end-zone) ObjectSomeValuesFrom(:located-in :Zone-SE)))

# Class: :Faceoff-zone-SW (:Faceoff-zone-SW)

SubClassOf(:Faceoff-zone-SW :Faceoff-zone)
SubClassOf(:Faceoff-zone-SW ObjectIntersectionOf(ObjectSomeValuesFrom(:located-in :South-end-zone) ObjectSomeValuesFrom(:located-in :Zone-SW)))

# Class: :Forward (:Forward)

SubClassOf(:Forward :Player)

# Class: :Game (:Game)

SubClassOf(:Game ObjectIntersectionOf(DataExactCardinality(1 :has-end-time xsd:dateTime) DataExactCardinality(1 :has-start-time xsd:dateTime)))
SubClassOf(:Game ObjectSomeValuesFrom(:has-game-event :Game-event))
SubClassOf(:Game ObjectAllValuesFrom(:has-away-team :Team))
SubClassOf(:Game ObjectAllValuesFrom(:has-away-team-roster :Team-roster-for-game))
SubClassOf(:Game ObjectAllValuesFrom(:has-home-team :Team))
SubClassOf(:Game ObjectAllValuesFrom(:has-home-team-roster :Team-roster-for-game))
SubClassOf(:Game ObjectAllValuesFrom(:is-game-for-season :Season-for-league))
SubClassOf(:Game ObjectExactCardinality(1 :has-away-team :Team))
SubClassOf(:Game ObjectExactCardinality(1 :has-away-team-roster :Team-roster-for-game))
SubClassOf(:Game ObjectExactCardinality(1 :has-home-team :Team))
SubClassOf(:Game ObjectExactCardinality(1 :has-home-team-roster :Team-roster-for-game))
SubClassOf(:Game ObjectExactCardinality(1 :is-game-for-season :Season-for-league))

# Class: :Game-end (Game-end)

AnnotationAssertion(rdfs:label :Game-end "Game-end")
SubClassOf(:Game-end :End-event)

# Class: :Game-event (:Game-event)

SubClassOf(:Game-event :Event)
SubClassOf(:Game-event ObjectIntersectionOf(ObjectAllValuesFrom(:has-game-state :Game-state) ObjectExactCardinality(1 :has-game-state)))
SubClassOf(:Game-event ObjectIntersectionOf(DataAllValuesFrom(:has-period-time xsd:duration) DataExactCardinality(1 :has-period-time xsd:duration)))
SubClassOf(:Game-event ObjectIntersectionOf(DataAllValuesFrom(:has-time xsd:dateTime) DataExactCardinality(1 :has-time xsd:dateTime)))
SubClassOf(:Game-event ObjectSomeValuesFrom(:occured-in-period :Period))

# Class: :Game-off (Game-off)

AnnotationAssertion(rdfs:label :Game-off "Game-off")
SubClassOf(:Game-off :End-event)

# Class: :Game-state (:Game-state)

SubClassOf(:Game-state ObjectIntersectionOf(ObjectSomeValuesFrom(:has-away-player-on-ice :Player) ObjectSomeValuesFrom(:has-home-player-on-ice :Player)))
SubClassOf(:Game-state ObjectIntersectionOf(ObjectAllValuesFrom(:has-team-disposition :Team-disposition) ObjectExactCardinality(1 :has-team-disposition)))
SubClassOf(:Game-state ObjectIntersectionOf(DataSomeValuesFrom(:away-team-goals xsd:int) DataSomeValuesFrom(:goal-differential xsd:int) DataSomeValuesFrom(:home-team-goals xsd:int)))

# Class: :General-manager (:General-manager)

SubClassOf(:General-manager :Person)

# Class: :Giveaway (Giveaway)

AnnotationAssertion(rdfs:label :Giveaway "Giveaway")
SubClassOf(:Giveaway :Action-event)

# Class: :Goal-frame (:Goal-frame)

SubClassOf(:Goal-frame :On-ice-object)

# Class: :Goal-net (:Goal-net)

SubClassOf(:Goal-net :On-ice-object)

# Class: :Goal-zone (:Goal-zone)

SubClassOf(:Goal-zone :On-ice-zone)

# Class: :Goalkeeper (:Goalkeeper)

SubClassOf(:Goalkeeper :Player)

# Class: :Goaltending-coach (:Goaltending-coach)

SubClassOf(:Goaltending-coach :Coach)

# Class: :Head-coach (:Head-coach)

SubClassOf(:Head-coach :Coach)

# Class: :Hit (Hit)

AnnotationAssertion(rdfs:label :Hit "Hit")
SubClassOf(:Hit :Action-event)

# Class: :Icing-zone (:Icing-zone)

SubClassOf(:Icing-zone :On-ice-zone)

# Class: :League (:League)

SubClassOf(:League ObjectSomeValuesFrom(:has-season :Season-for-league))
SubClassOf(:League ObjectAllValuesFrom(:has-season :Season-for-league))
SubClassOf(:League DataAllValuesFrom(:has-league-name xsd:string))
SubClassOf(:League DataMinCardinality(1 :has-league-name xsd:string))

# Class: :Left-Wing (:Left-Wing)

SubClassOf(:Left-Wing :Forward)

# Class: :Missed-shot-event (Missed-shot-event)

AnnotationAssertion(rdfs:label :Missed-shot-event "Missed-shot-event")
SubClassOf(:Missed-shot-event :Shot-event)

# Class: :Moorings (:Moorings)

SubClassOf(:Moorings :On-ice-object)

# Class: :Neutral-zone (:Neutral-zone)

SubClassOf(:Neutral-zone :On-ice-zone)
SubClassOf(:Neutral-zone ObjectAllValuesFrom(:adjacent-to ObjectUnionOf(:North-end-zone :South-end-zone :Zone-NE :Zone-NW :Zone-SE :Zone-SW)))
SubClassOf(:Neutral-zone ObjectExactCardinality(1 :adjacent-to :North-end-zone))
SubClassOf(:Neutral-zone ObjectExactCardinality(1 :adjacent-to :South-end-zone))
SubClassOf(:Neutral-zone ObjectExactCardinality(1 :adjacent-to :Zone-NE))
SubClassOf(:Neutral-zone ObjectExactCardinality(1 :adjacent-to :Zone-NW))
SubClassOf(:Neutral-zone ObjectExactCardinality(1 :adjacent-to :Zone-SE))
SubClassOf(:Neutral-zone ObjectExactCardinality(1 :adjacent-to :Zone-SW))

# Class: :Neutral-zone-faceoff-spot (:Neutral-zone-faceoff-spot)

SubClassOf(:Neutral-zone-faceoff-spot :Faceoff-spot)
SubClassOf(:Neutral-zone-faceoff-spot ObjectSomeValuesFrom(:located-in :Neutral-zone))

# Class: :North-end-zone (:North-end-zone)

SubClassOf(:North-end-zone :End-zone)
SubClassOf(:North-end-zone ObjectAllValuesFrom(:adjacent-to ObjectUnionOf(:Neutral-zone :North-icing-zone :Zone-CNE :Zone-CNW)))
SubClassOf(:North-end-zone ObjectExactCardinality(1 :adjacent-to :Neutral-zone))
SubClassOf(:North-end-zone ObjectExactCardinality(1 :adjacent-to :North-icing-zone))
SubClassOf(:North-end-zone ObjectExactCardinality(1 :adjacent-to :Zone-CNE))
SubClassOf(:North-end-zone ObjectExactCardinality(1 :adjacent-to :Zone-CNW))

# Class: :North-goal-zone (:North-goal-zone)

SubClassOf(:North-goal-zone :Goal-zone)
SubClassOf(:North-goal-zone ObjectSomeValuesFrom(:located-in :North-end-zone))
SubClassOf(:North-goal-zone ObjectAllValuesFrom(:adjacent-to ObjectUnionOf(:North-icing-zone :Zone-NE :Zone-NW)))
SubClassOf(:North-goal-zone ObjectExactCardinality(1 :adjacent-to :North-icing-zone))
SubClassOf(:North-goal-zone ObjectExactCardinality(1 :adjacent-to :Zone-NE))
SubClassOf(:North-goal-zone ObjectExactCardinality(1 :adjacent-to :Zone-NW))

# Class: :North-icing-zone (:North-icing-zone)

SubClassOf(:North-icing-zone :Icing-zone)
SubClassOf(:North-icing-zone ObjectAllValuesFrom(:adjacent-to ObjectUnionOf(:North-end-zone :North-goal-zone :Zone-NE :Zone-NW)))
SubClassOf(:North-icing-zone ObjectExactCardinality(1 :adjacent-to :North-end-zone))
SubClassOf(:North-icing-zone ObjectExactCardinality(1 :adjacent-to :North-goal-zone))
SubClassOf(:North-icing-zone ObjectExactCardinality(1 :adjacent-to :Zone-NE))
SubClassOf(:North-icing-zone ObjectExactCardinality(1 :adjacent-to :Zone-NW))

# Class: :Off-ice-zone (:Off-ice-zone)

SubClassOf(:Off-ice-zone :Zone)

# Class: :On-ice-object (:On-ice-object)

SubClassOf(:On-ice-object ObjectAllValuesFrom(:belong-to :Arena))
SubClassOf(:On-ice-object ObjectExactCardinality(1 :belong-to :Arena))

# Class: :On-ice-zone (:On-ice-zone)

SubClassOf(:On-ice-zone :Zone)

# Class: :Overtime-period (:Overtime-period)

SubClassOf(:Overtime-period :Period)

# Class: :Penalty-box-zone (:Penalty-box-zone)

SubClassOf(:Penalty-box-zone :Off-ice-zone)

# Class: :Penalty-box-zone-N (:Penalty-box-zone-N)

SubClassOf(:Penalty-box-zone-N :Penalty-box-zone)

# Class: :Penalty-box-zone-S (:Penalty-box-zone-S)

SubClassOf(:Penalty-box-zone-S :Penalty-box-zone)

# Class: :Penalty-event (Penalty-event)

AnnotationAssertion(rdfs:label :Penalty-event "Penalty-event")
SubClassOf(:Penalty-event :Game-event)
SubClassOf(:Penalty-event ObjectAllValuesFrom(:has-penalized-player :Player))
SubClassOf(:Penalty-event ObjectAllValuesFrom(:has-penalized-team :Team))
SubClassOf(:Penalty-event ObjectAllValuesFrom(:has-penalty-severity :Penalty))
SubClassOf(:Penalty-event ObjectAllValuesFrom(:has-penalty-type :Penalty-type))
SubClassOf(:Penalty-event ObjectAllValuesFrom(:has-player-in-penalty-box :Player))
SubClassOf(:Penalty-event ObjectExactCardinality(1 :has-penalized-player :Player))
SubClassOf(:Penalty-event ObjectExactCardinality(1 :has-penalized-team :Team))
SubClassOf(:Penalty-event ObjectExactCardinality(1 :has-player-in-penalty-box :Player))
SubClassOf(:Penalty-event DataAllValuesFrom(:penalized-duration xsd:int))
SubClassOf(:Penalty-event DataExactCardinality(1 :penalized-duration xsd:int))

# Class: :Penalty-shot-shootout-period (:Penalty-shot-shootout-period)

SubClassOf(:Penalty-shot-shootout-period :Period)

# Class: :Penalty-type (Penalty-type)

AnnotationAssertion(rdfs:label :Penalty-type "Penalty-type")

# Class: :Period (Period)

AnnotationAssertion(rdfs:label :Period "Period")
SubClassOf(:Period ObjectIntersectionOf(DataExactCardinality(1 :has-end-time xsd:dateTime) DataExactCardinality(1 :has-start-time xsd:dateTime)))
SubClassOf(:Period ObjectAllValuesFrom(:defendingNTeam-has-bench ObjectUnionOf(:Bench-zone-N :Bench-zone-S)))
SubClassOf(:Period ObjectAllValuesFrom(:defendingSTeam-has-bench ObjectUnionOf(:Bench-zone-N :Bench-zone-S)))
SubClassOf(:Period ObjectAllValuesFrom(:has-defendingN-team :Team))
SubClassOf(:Period ObjectAllValuesFrom(:has-defendingS-team :Team))
SubClassOf(:Period ObjectExactCardinality(1 :defendingNTeam-has-bench ObjectUnionOf(:Bench-zone-N :Bench-zone-S)))
SubClassOf(:Period ObjectExactCardinality(1 :defendingSTeam-has-bench ObjectUnionOf(:Bench-zone-N :Bench-zone-S)))
SubClassOf(:Period ObjectExactCardinality(1 :has-defendingN-team :Team))
SubClassOf(:Period ObjectExactCardinality(1 :has-defendingS-team :Team))
SubClassOf(:Period DataAllValuesFrom(:has-order xsd:integer))
SubClassOf(:Period DataExactCardinality(1 :has-order xsd:integer))

# Class: :Period-end (Period-end)

AnnotationAssertion(rdfs:label :Period-end "Period-end")
SubClassOf(:Period-end :End-event)

# Class: :Period-start (Period-start)

AnnotationAssertion(rdfs:label :Period-start "Period-start")
SubClassOf(:Period-start :Start-event)

# Class: :Person (:Person)

SubClassOf(:Person DataAllValuesFrom(:has-person-name xsd:string))
SubClassOf(:Person DataMinCardinality(1 :has-person-name xsd:string))

# Class: :Player (:Player)

SubClassOf(:Player :Person)

# Class: :Player-on-roster (:Player-on-roster)

SubClassOf(:Player-on-roster ObjectSomeValuesFrom(:has-player :Player))
SubClassOf(:Player-on-roster ObjectAllValuesFrom(:has-player :Player))
SubClassOf(:Player-on-roster DataAllValuesFrom(:has-shirt-number xsd:integer))
SubClassOf(:Player-on-roster DataExactCardinality(1 :has-shirt-number xsd:integer))

# Class: :Playoff-game (:Playoff-game)

SubClassOf(:Playoff-game :Game)

# Class: :Power-play (:Power-play)

SubClassOf(:Power-play :Team-disposition)

# Class: :Preseason-game (:Preseason-game)

SubClassOf(:Preseason-game :Game)

# Class: :President (:President)

SubClassOf(:President :Person)

# Class: :Protective-netting (:Protective-netting)

SubClassOf(:Protective-netting :On-ice-object)

# Class: :Puck (:Puck)

SubClassOf(:Puck :On-ice-object)
SubClassOf(:Puck DataExactCardinality(1 :has-x-coordinate xsd:double))
SubClassOf(:Puck DataExactCardinality(1 :has-y-coordinate xsd:double))

# Class: :Referee (:Referee)

SubClassOf(:Referee :Person)

# Class: :Regular-season-game (:Regular-season-game)

SubClassOf(:Regular-season-game :Game)

# Class: :Regulation-period (:Regulation-period)

SubClassOf(:Regulation-period :Period)

# Class: :Right-Wing (:Right-Wing)

SubClassOf(:Right-Wing :Forward)

# Class: :Rink (:Rink)

SubClassOf(:Rink DataAllValuesFrom(:has-length xsd:double))
SubClassOf(:Rink DataAllValuesFrom(:has-width xsd:double))
SubClassOf(:Rink DataExactCardinality(1 :has-length xsd:double))
SubClassOf(:Rink DataExactCardinality(1 :has-width xsd:double))

# Class: :Scoring-shot-event (:Scoring-shot-event)

SubClassOf(:Scoring-shot-event :Shot-on-goal-event)

# Class: :Scout (:Scout)

SubClassOf(:Scout :Person)

# Class: :Season-for-league (:Season-for-league)

SubClassOf(:Season-for-league ObjectSomeValuesFrom(:contains-team :Team))
SubClassOf(:Season-for-league ObjectSomeValuesFrom(:has-season-game :Game))
SubClassOf(:Season-for-league ObjectAllValuesFrom(:contains-team :Team))
SubClassOf(:Season-for-league ObjectAllValuesFrom(:has-season-game :Game))
SubClassOf(:Season-for-league ObjectAllValuesFrom(:is-season-for :League))
SubClassOf(:Season-for-league ObjectExactCardinality(1 :is-season-for :League))
SubClassOf(:Season-for-league DataAllValuesFrom(:has-end-year xsd:integer))
SubClassOf(:Season-for-league DataAllValuesFrom(:has-start-year xsd:integer))
SubClassOf(:Season-for-league DataExactCardinality(1 :has-end-year xsd:integer))
SubClassOf(:Season-for-league DataExactCardinality(1 :has-start-year xsd:integer))

# Class: :Shift (Shift)

AnnotationAssertion(rdfs:label :Shift "Shift")
SubClassOf(:Shift :Action-event)
SubClassOf(:Shift ObjectSomeValuesFrom(:substituted-player :Player-on-roster))
SubClassOf(:Shift ObjectSomeValuesFrom(:substituting-player :Player-on-roster))
SubClassOf(:Shift ObjectExactCardinality(1 :by-team :Team))

# Class: :Short-handed (:Short-handed)

SubClassOf(:Short-handed :Team-disposition)

# Class: :Shot-event (Shot-event)

AnnotationAssertion(rdfs:label :Shot-event "Shot-event")
SubClassOf(:Shot-event :Action-event)
SubClassOf(:Shot-event ObjectExactCardinality(1 :attacking-team :Team))
SubClassOf(:Shot-event ObjectExactCardinality(1 :defending-team :Team))
SubClassOf(:Shot-event ObjectExactCardinality(1 :shooting-player :Player-on-roster))

# Class: :Shot-on-goal-event (Shot-on-goal-event)

AnnotationAssertion(rdfs:label :Shot-on-goal-event "Shot-on-goal-event")
SubClassOf(:Shot-on-goal-event :Shot-event)

# Class: :South-end-zone (:South-end-zone)

SubClassOf(:South-end-zone :End-zone)
SubClassOf(:South-end-zone ObjectAllValuesFrom(:adjacent-to ObjectUnionOf(:Neutral-zone :South-icing-zone :Zone-CSE :Zone-CSW)))
SubClassOf(:South-end-zone ObjectExactCardinality(1 :adjacent-to :Neutral-zone))
SubClassOf(:South-end-zone ObjectExactCardinality(1 :adjacent-to :South-icing-zone))
SubClassOf(:South-end-zone ObjectExactCardinality(1 :adjacent-to :Zone-CSE))
SubClassOf(:South-end-zone ObjectExactCardinality(1 :adjacent-to :Zone-CSW))

# Class: :South-goal-zone (:South-goal-zone)

SubClassOf(:South-goal-zone :Goal-zone)
SubClassOf(:South-goal-zone ObjectSomeValuesFrom(:located-in :South-end-zone))
SubClassOf(:South-goal-zone ObjectAllValuesFrom(:adjacent-to ObjectUnionOf(:South-icing-zone :Zone-SE :Zone-SW)))
SubClassOf(:South-goal-zone ObjectExactCardinality(1 :adjacent-to :South-icing-zone))
SubClassOf(:South-goal-zone ObjectExactCardinality(1 :adjacent-to :Zone-SE))
SubClassOf(:South-goal-zone ObjectExactCardinality(1 :adjacent-to :Zone-SW))

# Class: :South-icing-zone (:South-icing-zone)

SubClassOf(:South-icing-zone :Icing-zone)
SubClassOf(:South-icing-zone ObjectAllValuesFrom(:adjacent-to ObjectUnionOf(:South-end-zone :South-goal-zone :Zone-SE :Zone-SW)))
SubClassOf(:South-icing-zone ObjectExactCardinality(1 :adjacent-to :South-end-zone))
SubClassOf(:South-icing-zone ObjectExactCardinality(1 :adjacent-to :South-goal-zone))
SubClassOf(:South-icing-zone ObjectExactCardinality(1 :adjacent-to :Zone-SE))
SubClassOf(:South-icing-zone ObjectExactCardinality(1 :adjacent-to :Zone-SW))

# Class: :Start-event (Start-event)

AnnotationAssertion(rdfs:label :Start-event "Start-event")
SubClassOf(:Start-event :Game-event)
SubClassOf(:Start-event ObjectIntersectionOf(ObjectAllValuesFrom(:directly-followed-by :Faceoff) ObjectExactCardinality(1 :directly-followed-by)))

# Class: :Stoppage (:Stoppage)

SubClassOf(:Stoppage :Game-event)

# Class: :Takeaway (Takeaway)

AnnotationAssertion(rdfs:label :Takeaway "Takeaway")
SubClassOf(:Takeaway :Action-event)

# Class: :Team (:Team)

SubClassOf(:Team ObjectSomeValuesFrom(:has-player :Player))
SubClassOf(:Team ObjectSomeValuesFrom(:plays-in-season-for-league :Season-for-league))
SubClassOf(:Team ObjectAllValuesFrom(:has-home-arena :Arena))
SubClassOf(:Team ObjectAllValuesFrom(:plays-in-season-for-league :Season-for-league))
SubClassOf(:Team ObjectExactCardinality(1 :has-home-arena :Arena))
SubClassOf(:Team DataAllValuesFrom(:has-team-name xsd:string))

# Class: :Team-physician (:Team-physician)

SubClassOf(:Team-physician :Person)

# Class: :Team-roster (:Team-roster)

SubClassOf(:Team-roster ObjectSomeValuesFrom(:has-player-on-roster :Player-on-roster))
SubClassOf(:Team-roster ObjectAllValuesFrom(:has-player-on-roster :Player-on-roster))

# Class: :Team-roster-for-game (:Team-roster-for-game)

SubClassOf(:Team-roster-for-game :Team-roster)
SubClassOf(:Team-roster-for-game ObjectAllValuesFrom(:has-season-game :Game))
SubClassOf(:Team-roster-for-game ObjectExactCardinality(1 :has-season-game :Game))
DisjointClasses(:Team-roster-for-game :Team-roster-for-season)

# Class: :Team-roster-for-season (:Team-roster-for-season)

SubClassOf(:Team-roster-for-season :Team-roster)
SubClassOf(:Team-roster-for-season ObjectAllValuesFrom(:has-season :Season-for-league))
SubClassOf(:Team-roster-for-season ObjectExactCardinality(1 :has-season :Season-for-league))

# Class: :Video-coach (:Video-coach)

SubClassOf(:Video-coach :Coach)

# Class: :Zone (:Zone)

SubClassOf(:Zone ObjectAllValuesFrom(:part-of :Rink))
SubClassOf(:Zone ObjectExactCardinality(1 :part-of :Rink))

# Class: :Zone-CNE (:Zone-CNE)

SubClassOf(:Zone-CNE :Blocked-zone)
SubClassOf(:Zone-CNE ObjectSomeValuesFrom(:located-in :Neutral-zone))
SubClassOf(:Zone-CNE ObjectAllValuesFrom(:adjacent-to ObjectUnionOf(:North-end-zone :Zone-CNW :Zone-CSE :Zone-NE)))
SubClassOf(:Zone-CNE ObjectExactCardinality(1 :adjacent-to :North-end-zone))
SubClassOf(:Zone-CNE ObjectExactCardinality(1 :adjacent-to :Zone-CNW))
SubClassOf(:Zone-CNE ObjectExactCardinality(1 :adjacent-to :Zone-CSE))
SubClassOf(:Zone-CNE ObjectExactCardinality(1 :adjacent-to :Zone-NE))

# Class: :Zone-CNW (:Zone-CNW)

SubClassOf(:Zone-CNW :Blocked-zone)
SubClassOf(:Zone-CNW ObjectSomeValuesFrom(:located-in :Neutral-zone))
SubClassOf(:Zone-CNW ObjectAllValuesFrom(:adjacent-to ObjectUnionOf(:North-end-zone :Zone-CNE :Zone-CSW :Zone-SW)))
SubClassOf(:Zone-CNW ObjectExactCardinality(1 :adjacent-to :North-end-zone))
SubClassOf(:Zone-CNW ObjectExactCardinality(1 :adjacent-to :Zone-CNE))
SubClassOf(:Zone-CNW ObjectExactCardinality(1 :adjacent-to :Zone-CSW))
SubClassOf(:Zone-CNW ObjectExactCardinality(1 :adjacent-to :Zone-SW))

# Class: :Zone-CSE (:Zone-CSE)

SubClassOf(:Zone-CSE :Blocked-zone)
SubClassOf(:Zone-CSE ObjectSomeValuesFrom(:located-in :Neutral-zone))
SubClassOf(:Zone-CSE ObjectAllValuesFrom(:adjacent-to ObjectUnionOf(:South-end-zone :Zone-CNE :Zone-CSW :Zone-SW)))
SubClassOf(:Zone-CSE ObjectExactCardinality(1 :adjacent-to :South-end-zone))
SubClassOf(:Zone-CSE ObjectExactCardinality(1 :adjacent-to :Zone-CNE))
SubClassOf(:Zone-CSE ObjectExactCardinality(1 :adjacent-to :Zone-CSW))
SubClassOf(:Zone-CSE ObjectExactCardinality(1 :adjacent-to :Zone-SW))

# Class: :Zone-CSW (:Zone-CSW)

SubClassOf(:Zone-CSW :Blocked-zone)
SubClassOf(:Zone-CSW ObjectSomeValuesFrom(:located-in :Neutral-zone))
SubClassOf(:Zone-CSW ObjectAllValuesFrom(:adjacent-to ObjectUnionOf(:South-end-zone :Zone-CNW :Zone-CSE :Zone-SW)))
SubClassOf(:Zone-CSW ObjectExactCardinality(1 :adjacent-to :South-end-zone))
SubClassOf(:Zone-CSW ObjectExactCardinality(1 :adjacent-to :Zone-CNW))
SubClassOf(:Zone-CSW ObjectExactCardinality(1 :adjacent-to :Zone-CSE))
SubClassOf(:Zone-CSW ObjectExactCardinality(1 :adjacent-to :Zone-SW))

# Class: :Zone-NE (:Zone-NE)

SubClassOf(:Zone-NE :Blocked-zone)
SubClassOf(:Zone-NE ObjectSomeValuesFrom(:located-in :North-end-zone))
SubClassOf(:Zone-NE ObjectAllValuesFrom(:adjacent-to ObjectUnionOf(:Neutral-zone :North-icing-zone :Zone-CNE :Zone-NW)))
SubClassOf(:Zone-NE ObjectExactCardinality(1 :adjacent-to :Neutral-zone))
SubClassOf(:Zone-NE ObjectExactCardinality(1 :adjacent-to :North-icing-zone))
SubClassOf(:Zone-NE ObjectExactCardinality(1 :adjacent-to :Zone-CNE))
SubClassOf(:Zone-NE ObjectExactCardinality(1 :adjacent-to :Zone-NW))

# Class: :Zone-NW (:Zone-NW)

SubClassOf(:Zone-NW :Blocked-zone)
SubClassOf(:Zone-NW ObjectSomeValuesFrom(:located-in :North-end-zone))
SubClassOf(:Zone-NW ObjectAllValuesFrom(:adjacent-to ObjectUnionOf(:Neutral-zone :North-icing-zone :Zone-CNW :Zone-NE)))
SubClassOf(:Zone-NW ObjectExactCardinality(1 :adjacent-to :Neutral-zone))
SubClassOf(:Zone-NW ObjectExactCardinality(1 :adjacent-to :North-icing-zone))
SubClassOf(:Zone-NW ObjectExactCardinality(1 :adjacent-to :Zone-CNW))
SubClassOf(:Zone-NW ObjectExactCardinality(1 :adjacent-to :Zone-NE))

# Class: :Zone-SE (:Zone-SE)

SubClassOf(:Zone-SE :Blocked-zone)
SubClassOf(:Zone-SE ObjectSomeValuesFrom(:located-in :South-end-zone))
SubClassOf(:Zone-SE ObjectAllValuesFrom(:adjacent-to ObjectUnionOf(:Neutral-zone :South-icing-zone :Zone-CSE :Zone-SW)))
SubClassOf(:Zone-SE ObjectExactCardinality(1 :adjacent-to :Neutral-zone))
SubClassOf(:Zone-SE ObjectExactCardinality(1 :adjacent-to :South-icing-zone))
SubClassOf(:Zone-SE ObjectExactCardinality(1 :adjacent-to :Zone-CSE))
SubClassOf(:Zone-SE ObjectExactCardinality(1 :adjacent-to :Zone-SW))

# Class: :Zone-SW (:Zone-SW)

SubClassOf(:Zone-SW :Blocked-zone)
SubClassOf(:Zone-SW ObjectSomeValuesFrom(:located-in :South-end-zone))
SubClassOf(:Zone-SW ObjectAllValuesFrom(:adjacent-to ObjectUnionOf(:Neutral-zone :South-icing-zone :Zone-CSW :Zone-SE)))
SubClassOf(:Zone-SW ObjectExactCardinality(1 :adjacent-to :Neutral-zone))
SubClassOf(:Zone-SW ObjectExactCardinality(1 :adjacent-to :South-icing-zone))
SubClassOf(:Zone-SW ObjectExactCardinality(1 :adjacent-to :Zone-CSW))
SubClassOf(:Zone-SW ObjectExactCardinality(1 :adjacent-to :Zone-SE))


############################
#   Named Individuals
############################

# Individual: :Bench-Minor-Penalty (:Bench-Minor-Penalty)

ClassAssertion(:Penalty :Bench-Minor-Penalty)

# Individual: :Even-3-3 (:Even-3-3)

ClassAssertion(:Even :Even-3-3)

# Individual: :Even-4-4 (:Even-4-4)

ClassAssertion(:Even :Even-4-4)

# Individual: :Even-5-5 (:Even-5-5)

ClassAssertion(:Even :Even-5-5)

# Individual: :Fighting (:Fighting)

ClassAssertion(:Penalty-type :Fighting)

# Individual: :Game-Misconduct-Penalty (:Game-Misconduct-Penalty)

ClassAssertion(:Penalty :Game-Misconduct-Penalty)

# Individual: :High-Sticking (:High-Sticking)

ClassAssertion(:Penalty-type :High-Sticking)

# Individual: :Holding (:Holding)

ClassAssertion(:Penalty-type :Holding)

# Individual: :Interference (:Interference)

ClassAssertion(:Penalty-type :Interference)

# Individual: :Major-Penalty (:Major-Penalty)

ClassAssertion(:Penalty :Major-Penalty)

# Individual: :Match-Penalty (:Match-Penalty)

ClassAssertion(:Penalty :Match-Penalty)

# Individual: :Minor-Penalty (:Minor-Penalty)

ClassAssertion(:Penalty :Minor-Penalty)

# Individual: :Misconduct-Penalty (:Misconduct-Penalty)

ClassAssertion(:Penalty :Misconduct-Penalty)

# Individual: :PP-5-3 (:PP-5-3)

ClassAssertion(:Power-play :PP-5-3)

# Individual: :PP-5-4 (:PP-5-4)

ClassAssertion(:Power-play :PP-5-4)

# Individual: :SH-3-5 (:SH-3-5)

ClassAssertion(:Short-handed :SH-3-5)

# Individual: :SH-4-5 (:SH-4-5)

ClassAssertion(:Short-handed :SH-4-5)

# Individual: :Slashing (:Slashing)

ClassAssertion(:Penalty-type :Slashing)

# Individual: :Too-Many-Players-On-Ice (:Too-Many-Players-On-Ice)

ClassAssertion(:Penalty-type :Too-Many-Players-On-Ice)

# Individual: :Tripping (:Tripping)

ClassAssertion(:Penalty-type :Tripping)


)